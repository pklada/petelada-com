/*! normalize.css v1.0.1 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Corrects `block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block; }

/*
 * Corrects `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

/*
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Addresses styling for `hidden` attribute not present in IE 7/8/9, Firefox 3,
 * and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevents iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Addresses `font-family` inconsistency between `textarea` and other form
 * elements.
 */
html,
button,
input,
select,
textarea {
  font-family: sans-serif; }

/*
 * Addresses margins handled incorrectly in IE 6/7.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Addresses `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/*
 * Improves readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Addresses font sizes and margins set differently in IE 6/7.
 * Addresses font sizes within `section` and `article` in Firefox 4+, Safari 5,
 * and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

h2 {
  font-size: 1.5em;
  margin: 0.83em 0; }

h3 {
  font-size: 1.17em;
  margin: 1em 0; }

h4 {
  font-size: 1em;
  margin: 1.33em 0; }

h5 {
  font-size: 0.83em;
  margin: 1.67em 0; }

h6 {
  font-size: 0.75em;
  margin: 2.33em 0; }

/*
 * Addresses styling not present in IE 7/8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Addresses style set to `bolder` in Firefox 3+, Safari 4/5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

blockquote {
  margin: 1em 40px; }

/*
 * Addresses styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/*
 * Addresses styling not present in IE 6/7/8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/*
 * Addresses margins set differently in IE 6/7.
 */
p,
pre {
  margin: 1em 0; }

/*
 * Corrects font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  _font-family: 'courier new', monospace;
  font-size: 1em; }

/*
 * Improves readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

/*
 * Addresses CSS quotes not supported in IE 6/7.
 */
q {
  quotes: none; }

/*
 * Addresses `quotes` property not supported in Safari 4.
 */
q:before,
q:after {
  content: '';
  content: none; }

/*
 * Addresses inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/*
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Lists
   ========================================================================== */
/*
 * Addresses margins set differently in IE 6/7.
 */
dl,
menu,
ol,
ul {
  margin: 1em 0; }

dd {
  margin: 0 0 0 40px; }

/*
 * Addresses paddings set differently in IE 6/7.
 */
menu,
ol,
ul {
  padding: 0 0 0 40px; }

/*
 * Corrects list images handled incorrectly in IE 7.
 */
nav ul,
nav ol {
  list-style: none;
  list-style-image: none; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * 1. Removes border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/*
 * Corrects overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Addresses margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Corrects margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Corrects color not being inherited in IE 6/7/8/9.
 * 2. Corrects text not wrapping in Firefox 3.
 * 3. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/*
 * 1. Corrects font size not being inherited in all browsers.
 * 2. Addresses margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improves appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/*
 * Addresses Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Corrects inability to style clickable `input` types in iOS.
 * 3. Improves usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
input[disabled] {
  cursor: default; }

/*
 * 1. Addresses box sizing set to content-box in IE 8/9.
 * 2. Removes excess padding in IE 8/9.
 * 3. Removes excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/*
 * 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/*
 * Removes inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Removes inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Removes default vertical scrollbar in IE 6/7/8/9.
 * 2. Improves readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

* {
  font-family: "Whitney SSm A", "Whitney SSm B", WhitnBoo, ProximaNova-Regular, "Helvetica Neue", Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased; }

p {
  font-size: 0.875rem;
  line-height: 1.25rem;
  margin: 0 0 1.25rem 0;
  color: #51574E; }
  p.large {
    font-size: 1.125rem;
    line-height: 2.5rem; }
  p:last-child {
    margin-bottom: 0; }

ul {
  font-size: 0.875rem;
  line-height: 1.25rem;
  margin: 0 0 1.25rem 0;
  color: #51574E; }

h1 {
  font-weight: 700;
  font-size: 1.5rem;
  line-height: 2.5rem;
  margin: 0 0 1.25rem 0;
  color: #414B3B; }

h2 {
  font-weight: 700;
  font-size: 1.125rem;
  line-height: 2.5rem;
  margin: 0 0 1.25rem 0;
  color: #414B3B; }

h3 {
  font-size: 1.125rem;
  line-height: 2.5rem;
  margin: 0 0 1.25rem 0;
  color: #414B3B;
  font-weight: normal; }

.v-align-middle {
  vertical-align: middle; }

.text-align-center {
  text-align: center; }

.pipes + .pipes {
  border-left: 1px solid #D8D8D8;
  margin-left: 10px;
  padding-left: 10px; }

.l-v-spaced {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem; }

.l-v-top-spaced {
  margin-top: 1.25rem; }

.l-h-spaced {
  margin-left: 20px;
  margin-right: 20px; }

.l-h-right-spaced {
  margin-right: 20px; }

.l-h-left-spaced {
  margin-left: 20px; }

.l-h-left-half-spaced {
  margin-left: 10px; }

.l-h-left-right-spaced {
  margin-right: 10px; }

.l-padded {
  padding: 2.93255%; }

.l-inline-block {
  display: inline-block; }

@media only screen and (max-width: 600px) {
  .hidden-mobile {
    display: none; } }

*,
*:before,
*:after {
  box-sizing: border-box; }

html, body {
  background: #fff;
  overflow-x: hidden;
  font-size: 16px;
  font-weight: 400;
  background: #f2f2f2; }
  html.debug, body.debug {
    background-image: linear-gradient(to bottom, transparent 50%, #d0e6c4 50%);
    background-repeat: repeat;
    background-size: 100% 2.5rem; }

.container {
  background: #fff;
  width: 100%;
  position: relative; }
  .container .anim-canvas {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    pointer-events: none; }

.main-content {
  background: #fff;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto; }
  .main-content::after {
    clear: both;
    content: "";
    display: block; }
  .main-content main {
    float: left;
    display: block;
    margin-right: 2.93255%;
    width: 65.68915%;
    margin-right: 0;
    padding: 2.5rem 2.93255%; }
    .main-content main:last-child {
      margin-right: 0; }
    .main-content main.is-solo {
      margin-left: 17.15543%; }
  .main-content aside {
    float: left;
    display: block;
    margin-right: 2.93255%;
    width: 31.3783%;
    padding: 2.5rem 0 2.5rem 2.93255%; }
    .main-content aside:last-child {
      margin-right: 0; }
  @media only screen and (max-width: 600px) {
    .main-content main {
      float: left;
      display: block;
      margin-right: 2.93255%;
      width: 100%;
      padding: 1.25rem 20px; }
      .main-content main:last-child {
        margin-right: 0; }
      .main-content main.is-solo {
        margin-left: 0%; }
    .main-content aside {
      float: left;
      display: block;
      margin-right: 2.93255%;
      width: 100%;
      padding: 1.25rem 20px; }
      .main-content aside:last-child {
        margin-right: 0; } }

.photo-box {
  height: 25rem;
  margin-top: -6.25rem;
  margin-bottom: 2.5rem;
  border-radius: 6px;
  box-shadow: 0 0 0 5px #fff;
  background-color: #414B3B;
  background-position: center center;
  background-size: cover;
  overflow: hidden;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);
  position: relative; }
  .photo-box:after {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 6px;
    content: "";
    pointer-events: none;
    border: 1px solid rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 600px) {
    .photo-box {
      margin-top: -5rem;
      width: 200px;
      height: 200px;
      margin-left: auto;
      margin-right: auto;
      margin-bottom: 0; } }

.photo-box__placeholder {
  position: absolute;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
  background-color: #414B3B;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  -webkit-transition: opacity ease 600ms;
  -moz-transition: opacity ease 600ms;
  transition: opacity ease 600ms; }

.title__twitter-icon {
  width: 22px;
  height: auto;
  position: relative;
  top: 2px; }
  .title__twitter-icon path {
    fill: #629D41;
    opacity: .5; }

a {
  color: #629D41;
  text-decoration: none;
  font-weight: 500;
  -webkit-transition-property: color, border, background;
  -moz-transition-property: color, border, background;
  transition-property: color, border, background;
  -webkit-transition-duration: 100ms;
  -moz-transition-duration: 100ms;
  transition-duration: 100ms;
  -webkit-transition-timing-function: ease;
  -moz-transition-timing-function: ease;
  transition-timing-function: ease;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0.44);
  border-bottom: 1px solid #d0e6c4; }
  a:hover {
    color: #4b7932;
    border-color: #b4d7a0; }
  a.light {
    color: #fff;
    border-bottom-color: rgba(255, 255, 255, 0.3); }
  a.appears-as-text, .footer .footer__link {
    color: #51574E;
    border-bottom-color: rgba(81, 87, 78, 0.3); }
  a.arrow {
    background: transparent url(/svg/ic_arrow.svg) 98.5% center no-repeat;
    padding-right: 20px;
    border-bottom: 0;
    overflow: visible; }
    a.arrow:hover {
      background-position: 100% center; }

.bgd-underlines a {
  background-image: linear-gradient(to bottom, transparent 49%, #d0e6c4 50%);
  background-repeat: repeat-x;
  background-size: 2px 2px;
  background-position: 0 97%;
  border-bottom: none;
  text-shadow: 0.03em 0 #fff, -0.03em 0 #fff, 0.05em 0 #fff, -0.05em 0 #fff, 0.09em 0 #fff, -0.075em 0 #fff; }
  .bgd-underlines a:hover {
    background-image: linear-gradient(to bottom, transparent 50%, #b4d7a0 50%); }

.top-nav {
  height: 7.5rem;
  width: 100%;
  background-color: #eff5ec;
  box-shadow: inset 0 -1px rgba(0, 0, 0, 0.06); }
  @media only screen and (max-width: 600px) {
    .top-nav {
      height: auto;
      padding-bottom: 3.75rem;
      padding-top: 1.25rem; }
      .top-nav.no-aside {
        padding-bottom: 0; } }

.top-nav__container {
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  position: relative; }
  .top-nav__container::after {
    clear: both;
    content: "";
    display: block; }

.top-nav__nav {
  float: left;
  display: block;
  margin-right: 2.93255%;
  width: 65.68915%;
  margin-left: 34.31085%;
  padding: 0 2.93255%; }
  .top-nav__nav:last-child {
    margin-right: 0; }
  .no-aside .top-nav__nav {
    margin-left: 17.15543%; }
  .top-nav__nav ul {
    float: right;
    margin: 0;
    padding: 0;
    height: 7.5rem;
    line-height: 7.5rem; }
  .top-nav__nav li {
    height: 2.5rem;
    line-height: 2.5rem;
    vertical-align: bottom;
    display: inline-block;
    position: relative;
    right: -20px;
    margin-bottom: 1.25rem; }
  .top-nav__nav a {
    text-decoration: none;
    border: none;
    display: inline-block;
    padding: 0px 20px;
    color: #414B3B;
    font-weight: 600;
    position: relative;
    overflow: hidden;
    border-radius: 3px;
    -webkit-transform: translateZ(0);
    -moz-transform: translateZ(0);
    -ms-transform: translateZ(0);
    -o-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-transition-property: background;
    -moz-transition-property: background;
    transition-property: background;
    -webkit-transition-duration: 600ms;
    -moz-transition-duration: 600ms;
    transition-duration: 600ms;
    -webkit-transition-timing-function: ease;
    -moz-transition-timing-function: ease;
    transition-timing-function: ease;
    -webkit-transition-delay: 0s;
    -moz-transition-delay: 0s;
    transition-delay: 0s;
    background: transparent;
    outline: none; }
    .top-nav__nav a.is-selected {
      color: #629D41; }
    .top-nav__nav a span {
      position: relative;
      z-index: 1;
      line-height: 1; }
    .top-nav__nav a .ripple {
      position: absolute;
      width: 1.25rem;
      height: 1.25rem;
      left: 0;
      top: 0;
      z-index: 0;
      content: "";
      background: #e3e9e0;
      opacity: 0;
      border-radius: 50%;
      -webkit-transition: -webkit-transform ease-in 400ms, opacity ease-in 250ms;
      -moz-transition: -moz-transform ease-in 400ms, opacity ease-in 250ms;
      transition: transform ease-in 400ms, opacity ease-in 250ms;
      -webkit-transform: translateZ(0);
      -moz-transform: translateZ(0);
      -ms-transform: translateZ(0);
      -o-transform: translateZ(0);
      transform: translateZ(0); }
      .top-nav__nav a .ripple.ripple--click {
        background: #d6ded1; }
    .top-nav__nav a:hover {
      -webkit-transition-duration: 1200ms;
      -moz-transition-duration: 1200ms;
      transition-duration: 1200ms;
      -webkit-transition-delay: 50ms;
      -moz-transition-delay: 50ms;
      transition-delay: 50ms;
      background: #e3e9e0; }
      .top-nav__nav a:hover .ripple--hover {
        -webkit-transform: scale(5) translateZ(0);
        -moz-transform: scale(5) translateZ(0);
        -ms-transform: scale(5) translateZ(0);
        -o-transform: scale(5) translateZ(0);
        transform: scale(5) translateZ(0);
        opacity: 1; }
    .top-nav__nav a:active .ripple--click {
      -webkit-transform: scale(10) translateZ(0);
      -moz-transform: scale(10) translateZ(0);
      -ms-transform: scale(10) translateZ(0);
      -o-transform: scale(10) translateZ(0);
      transform: scale(10) translateZ(0);
      opacity: 1; }
  @media only screen and (max-width: 600px) {
    .top-nav__nav {
      float: left;
      display: block;
      margin-right: 2.93255%;
      width: 100%;
      margin-left: 0%;
      text-align: center;
      height: auto;
      float: none; }
      .top-nav__nav:last-child {
        margin-right: 0; }
      .top-nav__nav ul {
        float: none;
        display: inline-block;
        height: auto;
        line-height: inherit; }
      .top-nav__nav li {
        right: 0;
        margin-top: 1.25rem; }
      .no-aside .top-nav__nav {
        margin-left: 0%; } }

.top-nav__logo {
  position: absolute;
  left: 0;
  bottom: 0;
  margin-left: 34.31085%;
  padding: 0 2.93255%;
  -webkit-transition: -webkit-transform cubic-bezier(0.34, 1.61, 0.7, 1) 250ms;
  -moz-transition: -moz-transform cubic-bezier(0.34, 1.61, 0.7, 1) 250ms;
  transition: transform cubic-bezier(0.34, 1.61, 0.7, 1) 250ms;
  -webkit-transform: tranlateZ(0) scale(1);
  -moz-transform: tranlateZ(0) scale(1);
  -ms-transform: tranlateZ(0) scale(1);
  -o-transform: tranlateZ(0) scale(1);
  transform: tranlateZ(0) scale(1);
  margin-bottom: 1.25rem;
  height: 2.5rem;
  border: none;
  line-height: 2.5rem; }
  .top-nav__logo span {
    vertical-align: middle;
    display: inline-block;
    line-height: 1; }
  .top-nav__logo .name {
    margin-left: 10px;
    color: rgba(65, 75, 59, 0.5);
    -webkit-transition: color ease 250ms;
    -moz-transition: color ease 250ms;
    transition: color ease 250ms;
    font-weight: 600; }
  .top-nav__logo .name__first,
  .top-nav__logo .name__last {
    -webkit-transition: opacity ease 250ms, -webkit-transform ease 400ms;
    -moz-transition: opacity ease 250ms, -moz-transform ease 400ms;
    transition: opacity ease 250ms, transform ease 400ms; }
  .top-nav__logo.hide-name .name__first {
    -webkit-transform: translateX(-20px) scale(0.5);
    -moz-transform: translateX(-20px) scale(0.5);
    -ms-transform: translateX(-20px) scale(0.5);
    -o-transform: translateX(-20px) scale(0.5);
    transform: translateX(-20px) scale(0.5);
    opacity: 0; }
  .top-nav__logo.hide-name .name__last {
    -webkit-transform: translateX(-20px) scale(0.5);
    -moz-transform: translateX(-20px) scale(0.5);
    -ms-transform: translateX(-20px) scale(0.5);
    -o-transform: translateX(-20px) scale(0.5);
    transform: translateX(-20px) scale(0.5);
    opacity: 0; }
  .top-nav__logo svg {
    display: block; }
    .top-nav__logo svg path {
      fill: rgba(65, 75, 59, 0.5);
      -webkit-transition: fill ease 250ms;
      -moz-transition: fill ease 250ms;
      transition: fill ease 250ms; }
  .top-nav__logo:hover svg path {
    fill: #629D41; }
  .top-nav__logo:hover .name {
    color: #629D41; }
  .top-nav__logo:hover .name__first,
  .top-nav__logo:hover .name__last {
    -webkit-transform: translateX(0) scale(1);
    -moz-transform: translateX(0) scale(1);
    -ms-transform: translateX(0) scale(1);
    -o-transform: translateX(0) scale(1);
    transform: translateX(0) scale(1);
    -webkit-transition-timing-function: cubic-bezier(0.34, 1.61, 0.7, 1);
    -moz-transition-timing-function: cubic-bezier(0.34, 1.61, 0.7, 1);
    transition-timing-function: cubic-bezier(0.34, 1.61, 0.7, 1);
    -webkit-transition-delay: 100ms;
    -moz-transition-delay: 100ms;
    transition-delay: 100ms;
    opacity: 1; }
  .top-nav__logo:hover .name__last {
    -webkit-transition-delay: 350ms;
    -moz-transition-delay: 350ms;
    transition-delay: 350ms; }
  .top-nav__logo:active {
    -webkit-transform: scale(0.95) translateZ(0);
    -moz-transform: scale(0.95) translateZ(0);
    -ms-transform: scale(0.95) translateZ(0);
    -o-transform: scale(0.95) translateZ(0);
    transform: scale(0.95) translateZ(0); }
  .no-aside .top-nav__logo {
    margin-left: 17.15543%; }
  @media only screen and (max-width: 600px) {
    .top-nav__logo {
      margin-left: 0%;
      text-align: center;
      position: relative;
      display: block;
      margin-bottom: 0; }
      .top-nav__logo .name {
        display: none; }
      .no-aside .top-nav__logo {
        margin-left: 0%; } }

.divider {
  width: 100%;
  height: 1px;
  background: #D8D8D8;
  margin: 2.5rem 0; }

.card {
  background: #fff;
  border: 1px solid #D8D8D8;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.09);
  padding: 1.25rem 20px; }

.card__title {
  margin-top: 0;
  font-weight: 600;
  font-size: 1.125rem;
  line-height: 2.5rem; }

.card__content {
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-pack: start;
  -moz-box-pack: start;
  box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
  -ms-flex-pack: start;
  height: 100%; }

.card__description {
  max-height: 6.25rem;
  overflow: hidden; }
  .card__description .media {
    display: none; }

.card__image {
  margin-top: 1.25rem;
  position: relative; }
  .card__image:after {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 3px;
    content: "";
    pointer-events: none;
    border: 1px solid rgba(0, 0, 0, 0.1); }
  .card__image img {
    max-width: 100%;
    display: block;
    margin: 0 auto;
    border-radius: 3px; }

.card__item {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-bottom: 1.25rem; }
  .card__item:last-child {
    margin-bottom: 0; }

.card__chiclet {
  margin-bottom: 0;
  filter: grayscale(100%);
  -webkit-filter: grayscale(100%);
  opacity: .5; }
  .card:hover .card__chiclet {
    filter: grayscale(0%);
    -webkit-filter: grayscale(0%);
    opacity: 1; }

.card__main {
  position: relative; }
  .card__main:before {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    height: 1.25rem;
    content: "";
    pointer-events: none;
    background-color: transparent;
    background-image: -webkit-linear-gradient(bottom, #fff, rgba(255, 255, 255, 0));
    background-image: linear-gradient(to top,#fff, rgba(255, 255, 255, 0)); }

.card__footer {
  -webkit-box-flex: initial;
  -moz-box-flex: initial;
  box-flex: initial;
  -webkit-flex: initial;
  -moz-flex: initial;
  -ms-flex: initial;
  flex: initial;
  margin-left: -20px;
  margin-right: -20px;
  margin-bottom: -1.25rem !important;
  padding: 1.25rem 20px;
  border-top: 1px solid rgba(216, 216, 216, 0.5);
  border-radius: 0 0 6px 6px; }

.card--has-image .card__main:before {
  display: none; }

.card--full-height {
  height: 100%; }

.button {
  display: inline-block;
  height: 2.5rem;
  line-height: 2.5rem;
  padding: 0 20px;
  border: 1px solid transparent;
  border-radius: 2px;
  min-width: 175px;
  text-align: center;
  vertical-align: middle;
  outline: none;
  font-size: 0.875rem;
  -webkit-transition: all ease 200ms;
  -moz-transition: all ease 200ms;
  transition: all ease 200ms; }
  .button svg {
    vertical-align: middle;
    display: inline-block;
    line-height: 0;
    font-size: 0;
    margin-right: 7px;
    background: inherit; }
    .button svg path {
      fill: #629D41; }
  .button span {
    vertical-align: middle;
    height: auto;
    line-height: normal;
    display: inline-block;
    font-size: 0.875rem; }

.button--primary {
  background: #629D41;
  color: #fff;
  border-color: #629D41; }
  .button--primary svg path {
    fill: #fff; }
  .button--primary:hover {
    background: #578b3a;
    color: #fff;
    border-color: #578b3a; }
  .button--primary:active {
    background: #4b7932;
    color: #fff;
    border-color: #4b7932; }

.button--secondary {
  background: #fff;
  border-color: #629D41;
  color: #629D41; }
  .button--secondary:hover {
    background: #fafafa;
    color: #578b3a;
    border-color: #578b3a; }
  .button--secondary:active {
    background: #f2f2f2;
    color: #4b7932;
    border-color: #4b7932; }

.button--full-width {
  width: 100%;
  display: block; }

.button--has-span {
  font-size: 0; }

.flex-row {
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-pack: start;
  -moz-box-pack: start;
  box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
  -ms-flex-pack: start;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -40px;
  margin-top: -2.5rem; }

.flex-row__item {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding-right: 40px;
  padding-top: 2.5rem; }

.flex-row--half .flex-row__item {
  -webkit-flex-basis: 50%;
  -moz-flex-basis: 50%;
  flex-basis: 50%;
  -ms-flex-preferred-size: 50%; }

.footer {
  background: #f2f2f2;
  padding: 1.25rem 2.93255%;
  text-align: center; }
  .footer p {
    color: #51574E; }
  .footer .footer__nav ul {
    margin: 0;
    margin-bottom: 1.25rem;
    padding: 0; }
  .footer .footer__nav li {
    display: inline-block;
    margin-right: 20px; }
    .footer .footer__nav li:last-child {
      margin-right: 0; }

.post__title {
  font-size: 1.875rem;
  line-height: 2.5rem;
  margin: 0 7rem 2.5rem 0;
  color: #414B3B; }

.post__tags {
  display: none; }

.post__date {
  font-family: "Gotham SSm A", "Gotham SSm B", Gotham, sans-serif;
  font-size: 0.75rem;
  line-height: 1.25rem;
  text-transform: uppercase;
  color: #838c7f;
  display: inline-block;
  margin-bottom: 0; }

.post__chiclet {
  margin: 0;
  margin-right: 0.9375rem;
  position: relative; }
  .post__chiclet:after {
    position: absolute;
    right: -0.625rem;
    height: 100%;
    top: 0;
    width: 1px;
    background: #D8D8D8;
    content: ""; }

.post__meta {
  margin-bottom: 1.25rem;
  line-height: 2.5rem; }

.post__divider {
  text-align: center;
  height: 1.25rem;
  line-height: 1.25rem;
  position: relative;
  margin-bottom: 2.5rem; }
  .post__divider:before {
    position: absolute;
    top: 50%;
    height: 1px;
    left: 0;
    right: 0;
    background: #D8D8D8;
    content: ""; }
  .post__divider svg {
    display: inline-block;
    vertical-align: middle;
    position: relative;
    top: -1px;
    background: #fff;
    box-shadow: -0.625rem 0 0 0 #fff, 0.625rem 0 0 0 #fff; }

.post__content {
  margin-bottom: 2.5rem; }
  .post__content p {
    font-size: 1.125rem;
    line-height: 2.5rem; }
  .post__content hr {
    height: 1px;
    border: none;
    background: #D8D8D8;
    margin: 2.5rem 0; }
  .post__content p > code {
    font-weight: 500;
    border: 1px solid #f2f2f2;
    padding: 1px 4px;
    border-radius: 3px; }

.post__kudos {
  float: right;
  background: #fff;
  border: 1px solid #D8D8D8;
  display: inline-block;
  border-radius: 2px;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.06);
  font-size: 0;
  height: 2.5rem;
  line-height: 2.5rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: all ease 150ms;
  -moz-transition: all ease 150ms;
  transition: all ease 150ms;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0); }
  .post__kudos.kudos-given {
    border-color: #629D41 !important;
    background: #629D41; }
  .post__kudos.is-loading {
    opacity: .5; }
  .post__kudos:hover {
    border-color: #629D41;
    -webkit-transform: scale(1.05) translateZ(0);
    -moz-transform: scale(1.05) translateZ(0);
    -ms-transform: scale(1.05) translateZ(0);
    -o-transform: scale(1.05) translateZ(0);
    transform: scale(1.05) translateZ(0); }
  .post__kudos:active {
    -webkit-transform: scale(0.95) translateZ(0);
    -moz-transform: scale(0.95) translateZ(0);
    -ms-transform: scale(0.95) translateZ(0);
    -o-transform: scale(0.95) translateZ(0);
    transform: scale(0.95) translateZ(0); }

.post__kudos__label {
  color: #51574E;
  display: inline-block;
  vertical-align: middle;
  border-right: 1px solid #D8D8D8;
  font-size: 1.125rem;
  line-height: 2.5rem;
  line-height: 1;
  padding: 0 10px; }
  .kudos-given .post__kudos__label {
    border-color: #578b3a;
    color: #fff; }

.post__kudos__count {
  color: #51574E;
  display: inline-block;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
  padding: 0 10px;
  vertical-align: middle;
  font-family: "Gotham SSm A", "Gotham SSm B", Gotham, sans-serif; }
  .kudos-given .post__kudos__count {
    color: #fff; }

.media {
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  position: relative;
  text-align: center; }
  .media:before {
    z-index: 0;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 200vw;
    margin-left: -100vw;
    background: #f2f2f2;
    border-top: 1px solid rgba(0, 0, 0, 0.04);
    border-bottom: 1px solid rgba(0, 0, 0, 0.04);
    content: ""; }

.media__caption {
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: #838c7f;
  margin-top: 1.25rem;
  position: relative;
  z-index: 1;
  font-style: italic; }

.media__iframe,
.media__image {
  position: relative;
  z-index: 1; }

.img {
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  position: relative;
  text-align: center; }
  .img:before {
    z-index: 0;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 5000px;
    margin-left: -2500px;
    background: #f2f2f2;
    content: ""; }
  .img .img__caption {
    display: block;
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: #838c7f;
    margin-top: 1.25rem;
    position: relative;
    z-index: 1;
    font-style: italic; }

.img__image {
  position: relative;
  z-index: 1;
  border-radius: 3px;
  width: 100%; }
  .img__image img {
    max-width: 100%;
    border-radius: 3px;
    display: block;
    margin: 0 auto; }

.img--condensed, .card__description .img {
  width: 100%;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0; }
  .img--condensed:before, .card__description .img:before {
    display: none; }
  .img--condensed .img__image, .card__description .img .img__image {
    width: 100%; }
    .img--condensed .img__image img, .card__description .img .img__image img {
      max-width: 100%; }

.chiclet {
  -webkit-transition-property: opacity filter;
  -moz-transition-property: opacity filter;
  transition-property: opacity filter;
  -webkit-transition-duration: 250ms;
  -moz-transition-duration: 250ms;
  transition-duration: 250ms;
  -webkit-transition-timing-function: ease;
  -moz-transition-timing-function: ease;
  transition-timing-function: ease;
  font-size: 0.75rem;
  line-height: 1.25rem;
  font-family: "Gotham SSm A", "Gotham SSm B", Gotham, sans-serif;
  text-transform: uppercase;
  vertical-align: middle;
  display: inline-block;
  height: 1.25rem;
  line-height: 1.25rem;
  background: #51574E;
  color: #fff;
  padding: 0 0.3125rem;
  border-radius: 2px; }

.chiclet--post {
  background: #25D5C7; }

.chiclet--dribbble {
  background: #ea4c89; }

.chiclet--muted {
  background: #D8D8D8; }

.row {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: start;
  -moz-align-items: start;
  -ms-align-items: start;
  -o-align-items: start;
  align-items: start;
  -ms-flex-align: start;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-pack: start;
  -moz-box-pack: start;
  box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
  -ms-flex-pack: start;
  min-height: 5rem;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  border-bottom: 1px solid #D8D8D8; }
  .row:last-child {
    border-bottom: none; }

.row__lead {
  padding: 0 20px 0 0;
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: start;
  -moz-align-items: start;
  -ms-align-items: start;
  -o-align-items: start;
  align-items: start;
  -ms-flex-align: start;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  min-width: 120px;
  text-align: right; }
  @media only screen and (max-width: 600px) {
    .row__lead {
      min-width: auto; } }

.row__image {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: start;
  -moz-align-items: start;
  -ms-align-items: start;
  -o-align-items: start;
  align-items: start;
  -ms-flex-align: start;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  padding-right: 20px; }
  .row__image div {
    display: inline-block;
    position: relative; }
    .row__image div:after {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: 3px;
      content: "";
      pointer-events: none;
      border: 1px solid rgba(0, 0, 0, 0.1); }
  .row__image img {
    width: 80px;
    height: auto;
    border-radius: 3px;
    display: block; }

.row__content {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: start;
  -moz-align-items: start;
  -ms-align-items: start;
  -o-align-items: start;
  align-items: start;
  -ms-flex-align: start;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-flex-grow: 1;
  -moz-flex-grow: 1;
  flex-grow: 1;
  -ms-flex-positive: 1; }

.row__title {
  font-size: 1.125rem;
  line-height: 2.5rem;
  line-height: 1.5;
  margin-bottom: 0;
  display: inline;
  font-weight: 600; }
  .row__title a {
    color: #51574E;
    border-bottom-color: transparent; }
    .row__title a:hover {
      border-bottom-color: #51574E; }
  @media only screen and (max-width: 600px) {
    .row__title {
      font-size: 0.875rem;
      line-height: 1.25rem; } }

.row__subtitle {
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: #838c7f; }

.code-block {
  position: relative;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  margin-top: 1.25rem;
  margin-bottom: 1.25rem; }
  .code-block:before {
    z-index: 0;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 200vw;
    margin-left: -100vw;
    border-top: 1px solid rgba(0, 0, 0, 0.04);
    border-bottom: 1px solid rgba(0, 0, 0, 0.04);
    content: ""; }
  .code-block pre {
    position: relative;
    z-index: 2;
    font-size: 0.875rem;
    line-height: 1.25rem; }
    .code-block pre span {
      font-family: monospace, serif; }

.code-block__title {
  position: relative;
  z-index: 2;
  font-family: "Gotham SSm A", "Gotham SSm B", Gotham, sans-serif;
  font-size: 0.75rem;
  line-height: 1.25rem;
  color: #fff;
  background: #D8D8D8;
  padding: 0 4px;
  height: 1.25rem;
  display: inline-block;
  border-radius: 3px; }

.waterfall {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: flex-start;
  -moz-align-items: flex-start;
  -ms-align-items: flex-start;
  -o-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-align: start;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
  -webkit-flex: 0 1 auto;
  -moz-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .waterfall .waterfall__lane {
    -webkit-box-flex: 0;
    -moz-box-flex: 0;
    box-flex: 0;
    -webkit-flex: 0 1 auto;
    -moz-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    flex: 0 1 auto;
    width: calc(50% - 10px);
    margin-left: 20px; }
    .waterfall .waterfall__lane:first-child {
      margin-left: 0; }
    @media only screen and (max-width: 600px) {
      .waterfall .waterfall__lane {
        width: calc(100%);
        margin-left: 0; } }
    @media only screen and (min-width: 601px) and (max-width: 800px) {
      .waterfall .waterfall__lane {
        width: calc(100%);
        margin-left: 0; } }
  .waterfall .waterfall__item {
    display: block;
    margin-bottom: 1.25rem; }
  .waterfall.waterfall--animated .waterfall__item {
    -webkit-transition: all ease-in-out 250ms;
    -moz-transition: all ease-in-out 250ms;
    transition: all ease-in-out 250ms;
    -webkit-transform: translateZ(0) translateY(20px);
    -moz-transform: translateZ(0) translateY(20px);
    -ms-transform: translateZ(0) translateY(20px);
    -o-transform: translateZ(0) translateY(20px);
    transform: translateZ(0) translateY(20px);
    opacity: 0; }
  .waterfall.waterfall--animated.is-loaded .waterfall__lane .waterfall__item {
    -webkit-transition: all ease-in-out 250ms;
    -moz-transition: all ease-in-out 250ms;
    transition: all ease-in-out 250ms;
    -webkit-transform: translateZ(0) translateY(0);
    -moz-transform: translateZ(0) translateY(0);
    -ms-transform: translateZ(0) translateY(0);
    -o-transform: translateZ(0) translateY(0);
    transform: translateZ(0) translateY(0);
    opacity: 1; }
    .waterfall.waterfall--animated.is-loaded .waterfall__lane .waterfall__item:nth-child(1) {
      -webkit-transition-delay: 0;
      -moz-transition-delay: 0;
      transition-delay: 0; }
    .waterfall.waterfall--animated.is-loaded .waterfall__lane .waterfall__item:nth-child(2) {
      -webkit-transition-delay: 300ms;
      -moz-transition-delay: 300ms;
      transition-delay: 300ms; }
  .waterfall.waterfall--animated.is-loaded .waterfall__lane:nth-child(2) .waterfall__item {
    -webkit-transition-delay: 200ms;
    -moz-transition-delay: 200ms;
    transition-delay: 200ms; }
    .waterfall.waterfall--animated.is-loaded .waterfall__lane:nth-child(2) .waterfall__item:nth-child(2) {
      -webkit-transition-delay: 400ms;
      -moz-transition-delay: 400ms;
      transition-delay: 400ms; }

.highlight {
  background: #ffffff; }

.highlight .c {
  color: #999988;
  font-style: italic; }

/* Comment */
.highlight .err {
  color: #a61717;
  background-color: #e3d2d2; }

/* Error */
.highlight .k {
  font-weight: bold; }

/* Keyword */
.highlight .o {
  font-weight: bold; }

/* Operator */
.highlight .cm {
  color: #999988;
  font-style: italic; }

/* Comment.Multiline */
.highlight .cp {
  color: #999999;
  font-weight: bold; }

/* Comment.Preproc */
.highlight .c1 {
  color: #999988;
  font-style: italic; }

/* Comment.Single */
.highlight .cs {
  color: #999999;
  font-weight: bold;
  font-style: italic; }

/* Comment.Special */
.highlight .gd {
  color: #000000;
  background-color: #ffdddd; }

/* Generic.Deleted */
.highlight .gd .x {
  color: #000000;
  background-color: #ffaaaa; }

/* Generic.Deleted.Specific */
.highlight .ge {
  font-style: italic; }

/* Generic.Emph */
.highlight .gr {
  color: #aa0000; }

/* Generic.Error */
.highlight .gh {
  color: #999999; }

/* Generic.Heading */
.highlight .gi {
  color: #000000;
  background-color: #ddffdd; }

/* Generic.Inserted */
.highlight .gi .x {
  color: #000000;
  background-color: #aaffaa; }

/* Generic.Inserted.Specific */
.highlight .go {
  color: #888888; }

/* Generic.Output */
.highlight .gp {
  color: #555555; }

/* Generic.Prompt */
.highlight .gs {
  font-weight: bold; }

/* Generic.Strong */
.highlight .gu {
  color: #aaaaaa; }

/* Generic.Subheading */
.highlight .gt {
  color: #aa0000; }

/* Generic.Traceback */
.highlight .kc {
  font-weight: bold; }

/* Keyword.Constant */
.highlight .kd {
  font-weight: bold; }

/* Keyword.Declaration */
.highlight .kp {
  font-weight: bold; }

/* Keyword.Pseudo */
.highlight .kr {
  font-weight: bold; }

/* Keyword.Reserved */
.highlight .kt {
  color: #445588;
  font-weight: bold; }

/* Keyword.Type */
.highlight .m {
  color: #009999; }

/* Literal.Number */
.highlight .s {
  color: #d14; }

/* Literal.String */
.highlight .na {
  color: #008080; }

/* Name.Attribute */
.highlight .nb {
  color: #0086B3; }

/* Name.Builtin */
.highlight .nc {
  color: #445588;
  font-weight: bold; }

/* Name.Class */
.highlight .no {
  color: #008080; }

/* Name.Constant */
.highlight .ni {
  color: #800080; }

/* Name.Entity */
.highlight .ne {
  color: #990000;
  font-weight: bold; }

/* Name.Exception */
.highlight .nf {
  color: #990000;
  font-weight: bold; }

/* Name.Function */
.highlight .nn {
  color: #555555; }

/* Name.Namespace */
.highlight .nt {
  color: #000080; }

/* Name.Tag */
.highlight .nv {
  color: #008080; }

/* Name.Variable */
.highlight .ow {
  font-weight: bold; }

/* Operator.Word */
.highlight .w {
  color: #bbbbbb; }

/* Text.Whitespace */
.highlight .mf {
  color: #009999; }

/* Literal.Number.Float */
.highlight .mh {
  color: #009999; }

/* Literal.Number.Hex */
.highlight .mi {
  color: #009999; }

/* Literal.Number.Integer */
.highlight .mo {
  color: #009999; }

/* Literal.Number.Oct */
.highlight .sb {
  color: #d14; }

/* Literal.String.Backtick */
.highlight .sc {
  color: #d14; }

/* Literal.String.Char */
.highlight .sd {
  color: #d14; }

/* Literal.String.Doc */
.highlight .s2 {
  color: #d14; }

/* Literal.String.Double */
.highlight .se {
  color: #d14; }

/* Literal.String.Escape */
.highlight .sh {
  color: #d14; }

/* Literal.String.Heredoc */
.highlight .si {
  color: #d14; }

/* Literal.String.Interpol */
.highlight .sx {
  color: #d14; }

/* Literal.String.Other */
.highlight .sr {
  color: #009926; }

/* Literal.String.Regex */
.highlight .s1 {
  color: #d14; }

/* Literal.String.Single */
.highlight .ss {
  color: #990073; }

/* Literal.String.Symbol */
.highlight .bp {
  color: #999999; }

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #008080; }

/* Name.Variable.Class */
.highlight .vg {
  color: #008080; }

/* Name.Variable.Global */
.highlight .vi {
  color: #008080; }

/* Name.Variable.Instance */
.highlight .il {
  color: #009999; }

/* Literal.Number.Integer.Long */

/*# sourceMappingURL=data:application/json;base64, */
